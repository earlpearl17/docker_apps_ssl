version: '3.8'

services:
  web:
    build:
      context: ./app_pf
      dockerfile: Dockerfile.prod
    container_name: web-pf-ssl
    command: gunicorn portfolio.wsgi:application --bind 0.0.0.0:8000
    restart: always
    volumes:
      - static_volume1:/home/app1/web/static
      - media_volume1:/home/app1/web/media
    expose:
      - 8000
    env_file:
      - ./app_pf/.env
    depends_on:
      - db
  web2:
    build:
      context: ./app_wc
      dockerfile: Dockerfile.prod
    container_name: web-wc-ssl
    command: gunicorn word_counter.wsgi:application --bind 0.0.0.0:8001
    volumes:
      - static_volume2:/home/app2/web/static
      - media_volume2:/home/app2/web/media
    expose:
      - 8001
    env_file:
      - ./app_wc/.env
    depends_on:
      - db
  web3:
    build:
      context: ./app_ab
      dockerfile: Dockerfile.prod
    container_name: web-ab-ssl
    command: gunicorn mysite.wsgi:application --bind 0.0.0.0:8002
    volumes:
      - static_volume3:/home/app3/web/static
      - media_volume3:/home/app3/web/media
    expose:
      - 8002
    env_file:
      - ./app_ab/.env
    depends_on:
      - db
  web4:
    build:
      context: ./app_ll
      dockerfile: Dockerfile.prod
    container_name: web-ll-ssl
    command: gunicorn learning_log.wsgi:application --bind 0.0.0.0:8003
    volumes:
      - static_volume4:/home/app4/web/static
      - media_volume4:/home/app4/web/media
    expose:
      - 8003
    env_file:
      - ./app_ll/.env
    depends_on:
      - db
  web5:
    build:
      context: ./app_ph
      dockerfile: Dockerfile.prod
    container_name: web-ph-ssl
    command: gunicorn producthunt.wsgi:application --bind 0.0.0.0:8004
    volumes:
      - static_volume5:/home/app5/web/static
      - media_volume5:/home/app5/web/media
    expose:
      - 8004
    env_file:
      - ./app_ph/.env
    depends_on:
      - db
  web6:
    build:
      context: ./app_hw
      dockerfile: Dockerfile.prod
    container_name: web-hw-ssl
    command: gunicorn wsgi:app --bind 0.0.0.0:8005
    volumes:
      - static_volume6:/home/app6/web/static
      - media_volume6:/home/app6/web/media
    expose:
      - 8005
    env_file:
      - ./app_hw/.env
    depends_on:
      - db
  web7:
    build:
      context: ./app_fb
      dockerfile: Dockerfile.prod
    container_name: web-fb-ssl
    command: gunicorn wsgi:app --bind 0.0.0.0:8006
    volumes:
      - static_volume7:/home/app7/web/static
      - media_volume7:/home/app7/web/media
    expose:
      - 8006
    env_file:
      - ./app_fb/.env
    depends_on:
      - db
  web8:
    build:
      context: ./app_ft
      dockerfile: Dockerfile.prod
    container_name: web-ft-ssl
    command: gunicorn wsgi:app --bind 0.0.0.0:8007
    volumes:
      - static_volume8:/home/app8/web/static
      - media_volume8:/home/app8/web/media
    expose:
      - 8007
    env_file:
      - ./app_ft/.env
    depends_on:
      - db
  db:
    image: postgres:13.0-alpine
    container_name: my-db-ssl
    restart: always
    environment:
        - POSTGRES_DB=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/create_env.sql
  nginx-proxy:
    build: nginx
    container_name: nginx-proxy
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume1:/home/app1/web/static
      - media_volume1:/home/app1/web/media
      - static_volume2:/home/app2/web/static
      - media_volume2:/home/app2/web/media
      - static_volume3:/home/app3/web/static
      - media_volume3:/home/app3/web/media
      - static_volume4:/home/app4/web/static
      - media_volume4:/home/app4/web/media
      - static_volume5:/home/app5/web/static
      - media_volume5:/home/app5/web/media
      - static_volume6:/home/app6/web/static
      - media_volume6:/home/app6/web/media
      - static_volume7:/home/app7/web/static
      - media_volume7:/home/app7/web/media
      - static_volume8:/home/app8/web/static
      - media_volume8:/home/app8/web/media
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - 'com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen'
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-proxy
    environment:
      - DEFAULT_EMAIL=liam@liamsirkett.com
      - NGINX_PROXY_CONTAINER=nginx-proxy
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_volume1:
  media_volume1:
  static_volume2:
  media_volume2:
  static_volume3:
  media_volume3:
  static_volume4:
  media_volume4:
  static_volume5:
  media_volume5:
  static_volume6:
  media_volume6:
  static_volume7:
  media_volume7:
  static_volume8:
  media_volume8:
  certs:
  html:
  vhost:
  acme:
